<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        b4ncpqZLAAAAAElFTkSuQmCC
</value>
  </data>
</root>